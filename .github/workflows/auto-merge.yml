name: Auto-merge labeled PRs

on:
  pull_request:
    types: [labeled, synchronize, reopened]
  workflow_run:
    workflows: ["CI"]
    types: ["completed"]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            // Merge PRs labeled `automerge` when all checks are successful
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;

            async function tryMerge(prNumber) {
              const { data: prData } = await github.rest.pulls.get({ owner, repo, pull_number: prNumber });
              const labels = prData.labels.map(l => l.name);
              if (!labels.includes('automerge')) return;

              // Check combined status
              const { data: status } = await github.rest.repos.getCombinedStatusForRef({ owner, repo, ref: prData.head.sha });
              if (status.state !== 'success') return;

              try {
                await github.rest.pulls.merge({ owner, repo, pull_number: prNumber, merge_method: 'squash' });
              } catch (e) {
                core.info(`Merge skipped: ${e.message}`);
              }
            }

            if (pr) {
              await tryMerge(pr.number);
            } else {
              // On workflow_run or manual dispatch, scan open PRs
              const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'open', per_page: 100 });
              for (const p of prs) await tryMerge(p.number);
            }