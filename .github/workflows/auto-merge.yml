---
name: Auto-merge labeled PRs
"on":
  pull_request_target:
    types: [labeled, synchronize, ready_for_review, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  merge:
    if: >-
      contains(github.event.pull_request.labels.*.name, 'automerge') &&
      !contains(github.event.pull_request.labels.*.name, 'do-not-merge') &&
      !contains(github.event.pull_request.labels.*.name, 'blocked') &&
      github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Wait for required checks to pass
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 15
          running-workflow-name: Auto-merge labeled PRs

      - name: Merge PR (squash)
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            // Verify checks again via API as an extra guard
            const { data: combined } = await github.rest.repos
              .getCombinedStatusForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.head.sha
              });
            if (combined.state !== 'success') {
              core.setFailed(`Checks not successful: ${combined.state}`);
              return;
            }
            // Attempt squash merge
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash'
            });
